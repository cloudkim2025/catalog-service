<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ✅ MyBatis 매퍼 설정 파일 -->
<mapper namespace="com.example.basicboard2.mapper.BoardMapper">

    <!--
        ✅ 게시글 데이터를 매핑하는 ResultMap 정의
        - 데이터베이스의 `article` 테이블과 `Article` 객체 간의 매핑을 정의
    -->
    <resultMap id="articleResultMap" type="Article">
        <result property="id" column="id"/> <!-- 게시글 ID -->
        <result property="title" column="title"/> <!-- 게시글 제목 -->
        <result property="content" column="content"/> <!-- 게시글 내용 -->
        <result property="userId" column="user_id"/> <!-- 작성자 ID -->
        <result property="filePath" column="file_path"/> <!-- 첨부 파일 경로 -->
        <result property="created" column="created"/> <!-- 생성일 -->
        <result property="updated" column="updated"/> <!-- 수정일 -->
    </resultMap>

    <!--
        ✅ 게시글 저장 SQL
        - 새로운 게시글을 `article` 테이블에 삽입
    -->
    <insert id="saveArticle" parameterType="Article">
        INSERT INTO
            article(user_id, title, content, file_path)
        VALUES
            (#{userId}, #{title}, #{content}, #{filePath});
    </insert>

    <!--
        ✅ 게시글 목록 조회 SQL (페이징 처리)
        - `article` 테이블에서 게시글 목록을 조회
        - 최신 게시글이 먼저 나오도록 정렬
        - 페이징을 적용하여 특정 개수만 조회
    -->
    <select id="getArticles"
            parameterType="Paging"
            resultMap="articleResultMap">
        SELECT
            id, title, content, user_id, file_path, created, updated
        FROM
            article
        ORDER BY id DESC
            LIMIT #{offset}, #{size};
    </select>

    <!--
        ✅ 총 게시글 개수 조회 SQL
        - `article` 테이블에서 전체 게시글 개수를 조회
    -->
    <select id="getArticleCnt" resultType="Integer">
        SELECT COUNT(*) FROM article;
    </select>

    <select id="getArticleById"
            parameterType="Long"
            resultMap="articleResultMap"
    >
        SELECT
            id, title, content, user_id, file_path, created, updated
        FROM
            article
        WHERE
            id = #{id};
    </select>

    <delete id="deleteBoardById" parameterType="Long">
        DELETE FROM article
        WHERE id = #{id};
    </delete>

</mapper>
